/*
    This file is part of Magnum.

    Copyright © 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
                2020, 2021 Vladimír Vondruš <mosra@centrum.cz>

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

namespace Magnum {
/** @page cmake-extras Extras library usage with CMake
@brief Guide how to find and use Magnum Extras with CMake build system

@tableofcontents
@m_footernavigation

@section cmake-extras-installed Using Magnum Extras that were externally built and installed

The main logic is in the [FindMagnumExtras.cmake](https://github.com/mosra/magnum-extras/blob/master/modules/FindMagnumExtras.cmake)
module distributed in the `modules/` directory of the integration repository,
you are encouraged to copy it into your project and add path to the files to
`CMAKE_MODULE_PATH`:

@code{.cmake}
# Path where FindMagnumExtras.cmake can be found, adapt as needed
set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/modules/" ${CMAKE_MODULE_PATH})
@endcode

Otherwise, if CMake won't be able to find this file in predefined locations, it
will error out even if Magnum Extras might be installed on the system. Note
that the module file is updated as the library evolves, you are encouraged to
update your copy from time to time to avoid strange building issues.

If you installed the library or its dependencies to non-standard location
(other than `/usr`, e.g. `/home/xyz/projects`), set `CMAKE_PREFIX_PATH` to that
directory to help CMake find it. You can enter more different dirs if you
separate them with semicolons.

@section cmake-extras-subproject Using Magnum Extras as a CMake subproject

Continuing from @ref cmake-subproject, adding Magnum Extras is very similar.
Again, the @ref building-extras-features "Extras build-time options" have to
be specified before the subdirectory gets added:

@code{.cmake}
...

set(WITH_UI ON CACHE BOOL "" FORCE) # enable what you need
add_subdirectory(magnum-extras EXCLUDE_FROM_ALL)

find_package(MagnumExtras REQUIRED ...) # see below
@endcode

Each namespace provides further information about additional steps needed for a
CMake subproject setup.

@section cmake-extras-find-module Finding the package and its components

Basic usage is:

@code{.cmake}
find_package(MagnumExtras REQUIRED)
@endcode

This command tries to find Magnum extras and then defines:

-   `MagnumExtras_FOUND` --- Whether Magnum extras were found

This command alone is useless without specifying the components:

-   `Ui` --- @ref Ui library

Besides libraries, the following apps are available:

-   `player` --- @ref magnum-player "magnum-player" executable
-   `ui-gallery` --- @ref magnum-ui-gallery "magnum-ui-gallery" executable

Note that [each namespace](namespaces.html) contains more detailed information
about dependencies, availability on particular platform and also guide how to
enable given library in build and use it with CMake.

Example usage with specifying additional components is:

@code{.cmake}
find_package(MagnumExtras REQUIRED Ui)
@endcode

For each component is then defined:

-   `MagnumExtras_*_FOUND` --- Whether the component was found
-   `MagnumExtras::*` --- Component imported target

The package is found if either debug or release version of each requested
library is found. If both debug and release libraries are found, proper version
is chosen based on actual build configuration of the project (i.e. `Debug`
build is linked to debug libraries, `Release` build to release libraries).

See also @ref cmake "Magnum usage with CMake" for more information.

@section cmake-extras-modules Other CMake modules

See @ref cmake-modules "relevant section for the main Magnum project".

*/
}
